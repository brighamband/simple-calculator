{"ast":null,"code":"import _slicedToArray from\"C:\\\\Coding\\\\simple-calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Coding\\\\simple-calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  width: 200px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  font-size: xx-large;\\n  width: 100px;\\n  height: 50px;\\n  text-align: center;\\n  margin: 0.5em;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  font-family: sans-serif;\\n  text-align: center;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import styled,{css}from\"styled-components\";var AppDiv=styled.div(_templateObject());var BigStyle=css(_templateObject2());var BigInput=styled.input(_templateObject3(),BigStyle);var BigSelect=styled.select(_templateObject4(),BigStyle);var EqualsLine=styled.hr(_templateObject5());export default function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),firstOperand=_useState2[0],setFirstOperand=_useState2[1];var _useState3=useState(\"add\"),_useState4=_slicedToArray(_useState3,2),operator=_useState4[0],setOperator=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),secondOperand=_useState6[0],setSecondOperand=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),answer=_useState8[0],setAnswer=_useState8[1];useEffect(function(){var result;switch(operator){case\"add\":result=firstOperand+secondOperand;break;case\"subtract\":result=firstOperand-secondOperand;break;case\"multiply\":result=firstOperand*secondOperand;break;case\"divide\":result=firstOperand/secondOperand;break;default:break;}result=Math.floor(result*1000)/1000;if(isNaN(result)){result=\"...\";}setAnswer(result);},[firstOperand,operator,secondOperand]);return/*#__PURE__*/React.createElement(AppDiv,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Simple Calculator\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(BigInput,{type:\"number\",value:firstOperand,onChange:function onChange(e){return setFirstOperand(parseFloat(e.target.value));},placeholder:\"1\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(BigSelect,{value:operator,onChange:function onChange(e){return setOperator(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"add\"},\"+\"),/*#__PURE__*/React.createElement(\"option\",{value:\"subtract\"},\"\\u2212\"),/*#__PURE__*/React.createElement(\"option\",{value:\"multiply\"},\"\\xD7\"),/*#__PURE__*/React.createElement(\"option\",{value:\"divide\"},\"\\xF7\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(BigInput,{type:\"number\",value:secondOperand,onChange:function onChange(e){return setSecondOperand(parseFloat(e.target.value));},placeholder:\"2\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(EqualsLine,null),/*#__PURE__*/React.createElement(\"h1\",null,answer));}","map":{"version":3,"sources":["C:/Coding/simple-calculator/src/App.js"],"names":["React","useState","useEffect","styled","css","AppDiv","div","BigStyle","BigInput","input","BigSelect","select","EqualsLine","hr","App","firstOperand","setFirstOperand","operator","setOperator","secondOperand","setSecondOperand","answer","setAnswer","result","Math","floor","isNaN","e","parseFloat","target","value"],"mappings":"grCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,GAAV,mBAAZ,CAKA,GAAMC,CAAAA,QAAQ,CAAGH,GAAH,oBAAd,CAQA,GAAMI,CAAAA,QAAQ,CAAGL,MAAM,CAACM,KAAV,oBACVF,QADU,CAAd,CAIA,GAAMG,CAAAA,SAAS,CAAGP,MAAM,CAACQ,MAAV,oBACXJ,QADW,CAAf,CAIA,GAAMK,CAAAA,UAAU,CAAGT,MAAM,CAACU,EAAV,oBAAhB,CAIA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACYb,QAAQ,EADpB,wCACrBc,YADqB,eACPC,eADO,8BAEIf,QAAQ,CAAC,KAAD,CAFZ,yCAErBgB,QAFqB,eAEXC,WAFW,8BAGcjB,QAAQ,EAHtB,yCAGrBkB,aAHqB,eAGNC,gBAHM,8BAIAnB,QAAQ,EAJR,yCAIrBoB,MAJqB,eAIbC,SAJa,eAM5BpB,SAAS,CAAC,UAAM,CACd,GAAIqB,CAAAA,MAAJ,CAEA,OAAQN,QAAR,EACE,IAAK,KAAL,CACEM,MAAM,CAAGR,YAAY,CAAGI,aAAxB,CACA,MACF,IAAK,UAAL,CACEI,MAAM,CAAGR,YAAY,CAAGI,aAAxB,CACA,MACF,IAAK,UAAL,CACEI,MAAM,CAAGR,YAAY,CAAGI,aAAxB,CACA,MACF,IAAK,QAAL,CACEI,MAAM,CAAGR,YAAY,CAAGI,aAAxB,CACA,MACF,QACE,MAdJ,CAgBAI,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAG,IAApB,EAA4B,IAArC,CAEA,GAAIG,KAAK,CAACH,MAAD,CAAT,CAAmB,CACjBA,MAAM,CAAG,KAAT,CACD,CAEDD,SAAS,CAACC,MAAD,CAAT,CACD,CA1BQ,CA0BN,CAACR,YAAD,CAAeE,QAAf,CAAyBE,aAAzB,CA1BM,CAAT,CA4BA,mBACE,oBAAC,MAAD,mBACE,kDADF,cAEE,8BAFF,cAGE,oBAAC,QAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEJ,YAFT,CAGE,QAAQ,CAAE,kBAACY,CAAD,QAAOX,CAAAA,eAAe,CAACY,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,CAAtB,EAHZ,CAIE,WAAW,CAAC,GAJd,EAHF,cASE,8BATF,cAUE,oBAAC,SAAD,EAAW,KAAK,CAAEb,QAAlB,CAA4B,QAAQ,CAAE,kBAACU,CAAD,QAAOT,CAAAA,WAAW,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAAtC,eACE,8BAAQ,KAAK,CAAC,KAAd,MADF,cAEE,8BAAQ,KAAK,CAAC,UAAd,WAFF,cAGE,8BAAQ,KAAK,CAAC,UAAd,SAHF,cAIE,8BAAQ,KAAK,CAAC,QAAd,SAJF,CAVF,cAgBE,8BAhBF,cAiBE,oBAAC,QAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEX,aAFT,CAGE,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,gBAAgB,CAACQ,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,CAAvB,EAHZ,CAIE,WAAW,CAAC,GAJd,EAjBF,cAuBE,8BAvBF,cAwBE,oBAAC,UAAD,MAxBF,cAyBE,8BAAKT,MAAL,CAzBF,CADF,CA6BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst AppDiv = styled.div`\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst BigStyle = css`\r\n  font-size: xx-large;\r\n  width: 100px;\r\n  height: 50px;\r\n  text-align: center;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst BigInput = styled.input`\r\n  ${BigStyle}\r\n`;\r\n\r\nconst BigSelect = styled.select`\r\n  ${BigStyle}\r\n`;\r\n\r\nconst EqualsLine = styled.hr`\r\n  width: 200px;\r\n`;\r\n\r\nexport default function App() {\r\n  const [firstOperand, setFirstOperand] = useState();\r\n  const [operator, setOperator] = useState(\"add\");\r\n  const [secondOperand, setSecondOperand] = useState();\r\n  const [answer, setAnswer] = useState();\r\n\r\n  useEffect(() => {\r\n    let result;\r\n\r\n    switch (operator) {\r\n      case \"add\":\r\n        result = firstOperand + secondOperand;\r\n        break;\r\n      case \"subtract\":\r\n        result = firstOperand - secondOperand;\r\n        break;\r\n      case \"multiply\":\r\n        result = firstOperand * secondOperand;\r\n        break;\r\n      case \"divide\":\r\n        result = firstOperand / secondOperand;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    result = Math.floor(result * 1000) / 1000;\r\n\r\n    if (isNaN(result)) {\r\n      result = \"...\";\r\n    }\r\n\r\n    setAnswer(result);\r\n  }, [firstOperand, operator, secondOperand]);\r\n\r\n  return (\r\n    <AppDiv>\r\n      <h1>Simple Calculator</h1>\r\n      <br />\r\n      <BigInput\r\n        type=\"number\"\r\n        value={firstOperand}\r\n        onChange={(e) => setFirstOperand(parseFloat(e.target.value))}\r\n        placeholder=\"1\"\r\n      />\r\n      <br />\r\n      <BigSelect value={operator} onChange={(e) => setOperator(e.target.value)}>\r\n        <option value=\"add\">+</option>\r\n        <option value=\"subtract\">−</option>\r\n        <option value=\"multiply\">×</option>\r\n        <option value=\"divide\">÷</option>\r\n      </BigSelect>\r\n      <br />\r\n      <BigInput\r\n        type=\"number\"\r\n        value={secondOperand}\r\n        onChange={(e) => setSecondOperand(parseFloat(e.target.value))}\r\n        placeholder=\"2\"\r\n      />\r\n      <br />\r\n      <EqualsLine />\r\n      <h1>{answer}</h1>\r\n    </AppDiv>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}