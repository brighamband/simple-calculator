{"version":3,"sources":["App.js","index.js"],"names":["AppDiv","styled","div","BigStyle","css","BigInput","input","BigSelect","select","EqualsLine","hr","App","useState","firstOperand","setFirstOperand","operator","setOperator","secondOperand","setSecondOperand","answer","setAnswer","useEffect","result","Math","floor","isNaN","type","value","onChange","e","parseFloat","target","placeholder","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"yvBAGA,IAAMA,EAASC,IAAOC,IAAV,KAKNC,EAAWC,YAAH,KAQRC,EAAWJ,IAAOK,MAAV,IACVH,GAGEI,EAAYN,IAAOO,OAAV,IACXL,GAGEM,EAAaR,IAAOS,GAAV,KAID,SAASC,IAAO,IAAD,EACYC,qBADZ,mBACrBC,EADqB,KACPC,EADO,OAEIF,mBAAS,OAFb,mBAErBG,EAFqB,KAEXC,EAFW,OAGcJ,qBAHd,mBAGrBK,EAHqB,KAGNC,EAHM,OAIAN,qBAJA,mBAIrBO,EAJqB,KAIbC,EAJa,KAkC5B,OA5BAC,qBAAU,WACR,IAAIC,EAEJ,OAAQP,GACN,IAAK,MACHO,EAAST,EAAeI,EACxB,MACF,IAAK,WACHK,EAAST,EAAeI,EACxB,MACF,IAAK,WACHK,EAAST,EAAeI,EACxB,MACF,IAAK,SACHK,EAAST,EAAeI,EAK5BK,EAASC,KAAKC,MAAe,IAATF,GAAiB,IAEjCG,MAAMH,KACRA,EAAS,OAGXF,EAAUE,KACT,CAACT,EAAcE,EAAUE,IAG1B,kBAACjB,EAAD,KACE,iDACA,6BACA,kBAACK,EAAD,CACEqB,KAAK,SACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAgBgB,WAAWD,EAAEE,OAAOJ,SACrDK,YAAY,MAEd,6BACA,kBAACzB,EAAD,CAAWoB,MAAOZ,EAAUa,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEE,OAAOJ,SAChE,4BAAQA,MAAM,OAAd,KACA,4BAAQA,MAAM,YAAd,UACA,4BAAQA,MAAM,YAAd,QACA,4BAAQA,MAAM,UAAd,SAEF,6BACA,kBAACtB,EAAD,CACEqB,KAAK,SACLC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAiBY,WAAWD,EAAEE,OAAOJ,SACtDK,YAAY,MAEd,6BACA,kBAACvB,EAAD,MACA,4BAAKU,ICnFX,IAAMc,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3B,EAAD,OAEFsB,K","file":"static/js/main.cc641884.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst AppDiv = styled.div`\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst BigStyle = css`\r\n  font-size: xx-large;\r\n  width: 100px;\r\n  height: 50px;\r\n  text-align: center;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst BigInput = styled.input`\r\n  ${BigStyle}\r\n`;\r\n\r\nconst BigSelect = styled.select`\r\n  ${BigStyle}\r\n`;\r\n\r\nconst EqualsLine = styled.hr`\r\n  width: 200px;\r\n`;\r\n\r\nexport default function App() {\r\n  const [firstOperand, setFirstOperand] = useState();\r\n  const [operator, setOperator] = useState(\"add\");\r\n  const [secondOperand, setSecondOperand] = useState();\r\n  const [answer, setAnswer] = useState();\r\n\r\n  useEffect(() => {\r\n    let result;\r\n\r\n    switch (operator) {\r\n      case \"add\":\r\n        result = firstOperand + secondOperand;\r\n        break;\r\n      case \"subtract\":\r\n        result = firstOperand - secondOperand;\r\n        break;\r\n      case \"multiply\":\r\n        result = firstOperand * secondOperand;\r\n        break;\r\n      case \"divide\":\r\n        result = firstOperand / secondOperand;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    result = Math.floor(result * 1000) / 1000;\r\n\r\n    if (isNaN(result)) {\r\n      result = \"...\";\r\n    }\r\n\r\n    setAnswer(result);\r\n  }, [firstOperand, operator, secondOperand]);\r\n\r\n  return (\r\n    <AppDiv>\r\n      <h1>Simple Calculator</h1>\r\n      <br />\r\n      <BigInput\r\n        type=\"number\"\r\n        value={firstOperand}\r\n        onChange={(e) => setFirstOperand(parseFloat(e.target.value))}\r\n        placeholder=\"1\"\r\n      />\r\n      <br />\r\n      <BigSelect value={operator} onChange={(e) => setOperator(e.target.value)}>\r\n        <option value=\"add\">+</option>\r\n        <option value=\"subtract\">−</option>\r\n        <option value=\"multiply\">×</option>\r\n        <option value=\"divide\">÷</option>\r\n      </BigSelect>\r\n      <br />\r\n      <BigInput\r\n        type=\"number\"\r\n        value={secondOperand}\r\n        onChange={(e) => setSecondOperand(parseFloat(e.target.value))}\r\n        placeholder=\"2\"\r\n      />\r\n      <br />\r\n      <EqualsLine />\r\n      <h1>{answer}</h1>\r\n    </AppDiv>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}